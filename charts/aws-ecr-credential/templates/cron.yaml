apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: {{ include "aws-ecr-credential.cronJob" . }}
  namespace: {{ include "aws-ecr-credential.namespace" . }}
  labels:
{{ include "aws-ecr-credential.labels" . | indent 4 }}
spec:
  schedule: "* */8 * * *"
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2  
  jobTemplate:
    spec:
      backoffLimit: 4
      template:
        metadata:
          labels:
{{ include "aws-ecr-credential.podLabels" . | indent 12 }}
        spec:
          serviceAccountName: {{ include "aws-ecr-credential.serviceAccount" . }}
          terminationGracePeriodSeconds: 0
          restartPolicy: Never
          containers:
          - name: kubectl
            imagePullPolicy: IfNotPresent
            image: {{ .Values.jobImage }}:{{ .Values.jobImageTag }}
            env:
              - name: AWS_ACCESS_KEY_ID
                valueFrom:
                  secretKeyRef:
                    name: {{ include "aws-ecr-credential.secret" . }}
                    key: AWS_ACCESS_KEY_ID
              - name: AWS_SECRET_ACCESS_KEY
                valueFrom:
                  secretKeyRef:
                    name: {{ include "aws-ecr-credential.secret" . }}
                    key: AWS_SECRET_ACCESS_KEY
            command:
            - "/bin/sh"
            - "-c"
            - |
              AWS_ACCOUNT={{ .Values.aws.account }}
              AWS_REGION={{ .Values.aws.region }}
              TARGET_NAMESPACE={{ .Values.targetNamespace }}
              SERVICE_ACCOUNT_NAME={{ .Values.serviceAccountName }}
              SECRET_NAME={{ .Values.secretName }}
              echo "AWS_REGION=$AWS_REGION"
              echo "AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID"
              echo "AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY"
              echo "AWS_ACCOUNT=$AWS_ACCOUNT"
              echo "AWS_REGION=$AWS_REGION"
              echo "TARGET_NAMESPACE=$TARGET_NAMESPACE"
              echo "SERVICE_ACCOUNT_NAME=$SERVICE_ACCOUNT_NAME"
              echo "SECRET_NAME=$SECRET_NAME"

              DOCKER_REGISTRY_SERVER=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com
              DOCKER_USER=AWS
              DOCKER_PASSWORD=`aws ecr get-login --region ${AWS_REGION} --registry-ids ${AWS_ACCOUNT} | cut -d' ' -f6`

              echo "DOCKER_REGISTRY_SERVER=$DOCKER_REGISTRY_SERVER"
              echo "DOCKER_USER=$DOCKER_USER"
              echo "DOCKER_PASSWORD=$DOCKER_PASSWORD"

              kubectl delete secret --namespace "${TARGET_NAMESPACE}" "${SECRET_NAME}" || true
              kubectl create secret --namespace "${TARGET_NAMESPACE}" docker-registry "${SECRET_NAME}" \
              --docker-server=$DOCKER_REGISTRY_SERVER \
              --docker-username=$DOCKER_USER \
              --docker-password=$DOCKER_PASSWORD \
              --docker-email=no@email.local

              patch=$( printf '{"imagePullSecrets":[{"name":"%s"}]}' "${SECRET_NAME}" )
              kubectl --namespace "${TARGET_NAMESPACE}" patch serviceaccount "${SERVICE_ACCOUNT_NAME}" -p ${patch}

              SECRET_NAME='{{ .Release.Name }}-copy'
              kubectl delete secret "${SECRET_NAME}" || true
              kubectl create secret docker-registry "${SECRET_NAME}" \
              --docker-server=$DOCKER_REGISTRY_SERVER \
              --docker-username=$DOCKER_USER \
              --docker-password=$DOCKER_PASSWORD \
              --docker-email=no@email.local
